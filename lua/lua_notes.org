* Tutorials
  + http://luatut.com
  + Lua on Wikipedia: http://en.wikipedia.org/wiki/Lua_(programming_language)
  + Lua Users wiki: http://lua-users.org/wiki/
* Books
  + Programming in Lua http://www.inf.puc-rio.br/~roberto/pil2/
  + Beginning in Lua
  + Game programming
* Links
  + Evolution of Lua http://www.tecgraf.puc-rio.br/~lhf/ftp/doc/hopl.pdf
  + Hacker News search http://www.hnsearch.com/search#request/all&q=lua
  + Google HN search http://www.hnsearch.com/search#request/all&q=lua
* Code
  + Github https://github.com/languages/Lua
  + Google Code http://code.google.com/query/#q=lua  (Google Code Search has nothing)
  + Lua on Launchpad https://launchpad.net/lua
** Project ideas:
   Most of the things are scripting
   + Rockbox plug-in
   + Damn Small Linux - GUI for command line tools
   + Photoshop Light Room
* Notes
  + Why not Lua: http://julien.danjou.info/blog/2011.html#Why_not_Lua
  + Emacs Lua mode http://lua-mode.luaforge.net/
  + tables are good but complicated, some unexpected behaviour (e.g. with length and nil)
  + for is quite powerful
  + local enviroments are very powerful, together with first class functions and pcall: embedded language (namescape, scope)
  + fast
  + some behaviour is really not self-evident: two functions that return a list
  + module loading: good, though making modules in so many ways can complicate things (fall back to convention instead of a single way)
  + has lots of very powerful behaviour, but often those need more coding. With language maturity it will certainly change (as e.g. the loads of difference between 5.0 and 5.1)
  + metamethod: almost like in Python. Why only tables? Needs much more wrapping to be usable, though that migth be the "right way" Debug.setmetatable
  + Lots of interesting hacks to work around certain cleverness within the language (e.g. hack to always call __newindex)
